import React, {Component} from 'react';
import { Redirect } from 'react-router-dom';
import { connect } from 'react-redux';
import { bindActionCreators } from 'redux';
import { signinUser } from '../actions/auth';
import TextField from 'material-ui/TextField';
import RaisedButton from 'material-ui/RaisedButton';
import CircularProgress from 'material-ui/CircularProgress';

class SignIn extends Component {
  constructor(props) {
    super(props);
    this.state = {
      email: '',
      password: ''
    };
  }
  handleEmailChange(e) {
    this.setState({email: e.target.value});
  }

  handlePasswordChange(e) {
    this.setState({password: e.target.value});
  }

  handleSubmit(e) {
    e.preventDefault();
    const email = this.state.email.trim();
    const password = this.state.password.trim();
    this.props.signinUser({email, password})
  }
  renderLoading(){
    if(this.props.auth.loading){
      return <CircularProgress />
    } else {
      return;
    }
  }
  renderError(){
    if(this.props.auth.error){
      return (
        <div>{this.props.auth.error.message}</div>
      );
    } else {
      return;
    }
  }
  render() {
    if(this.props.auth.authenticated == true){
      return <Redirect to="/" />
    }
    return (
      <form>
      <TextField name="email"
        hintText="usuario"
        onChange={this.handleEmailChange.bind(this)}
        disabled={this.props.auth.loading}
        value={this.state.email} /><br/>
      <TextField name="password"
        hintText="senha"
        onChange={this.handlePasswordChange.bind(this)}
        type="password"
        disabled={this.props.auth.loading}
        value={this.state.password} /><br/>
      <RaisedButton label="Entrar"
        primary={true}
        onClick={this.handleSubmit.bind(this)}
        disabled={this.props.auth.loading} /><br/>
      {this.renderLoading()}
      {this.renderError()}
      </form>
      )
    }
}
function mapDispathToProps(dispatch) {
  return bindActionCreators({signinUser: signinUser}, dispatch);
}
function mapStateToProps(state){
  return { auth: state.auth};
}
export default connect(mapStateToProps, mapDispathToProps )(SignIn);
