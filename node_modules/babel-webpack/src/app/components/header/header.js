import React, {Component} from 'react';

import RaisedButton from 'material-ui/RaisedButton';
import AppBar from 'material-ui/AppBar';
import IconButton from 'material-ui/IconButton';
import IconMenu from 'material-ui/IconMenu';
import Menu from 'material-ui/Menu';
import MenuItem from 'material-ui/MenuItem';
import FlatButton from 'material-ui/FlatButton';
import Toggle from 'material-ui/Toggle';

import MoreVertIcon from 'material-ui/svg-icons/navigation/more-vert';
import NavigationExpand from 'material-ui/svg-icons/navigation/menu';
import ContentSend from 'material-ui/svg-icons/content/send';
import Add from 'material-ui/svg-icons/content/add';
import Home from 'material-ui/svg-icons/action/home';
import Settings from 'material-ui/svg-icons/action/settings';
import Exit from 'material-ui/svg-icons/action/exit-to-app';
import SearchIcon from 'material-ui/svg-icons/action/search';

import Drawer from 'material-ui/Drawer';
import Divider from 'material-ui/Divider';
import TextField from 'material-ui/TextField';
import Subheader from 'material-ui/Subheader';
import {List, ListItem} from 'material-ui/List';
import ContentInbox from 'material-ui/svg-icons/content/inbox';
import SelectField from 'material-ui/SelectField';

import { Link, Redirect } from 'react-router-dom';
import { connect } from 'react-redux';
import { bindActionCreators } from 'redux';
import { fetchEmpresas } from '../../actions/index';

import SearchBar from './search'

const styles = {
  customWidth: {
    width: 150,
  },
};

class Header extends Component {
  constructor(props) {
    super(props);
    this.state = {
      open: false,
      search: false,
      value: 1,
      dataSource: []
    };
  }

  componentWillMount(){
    this.props.fetchEmpresas();
  }

  handleToggle = () => this.setState({open: !this.state.open});
  handleClose = () => this.setState({open: false});
  handleSearch = () => this.setState({search: !this.state.search});


  renderEmpresas(){
    return this.props.empresas.list.map( (empresa) => {
      return (
        <ListItem primaryText={empresa.nome} key={empresa.nome}/>
      )
    });
  }
  handleChange = (event, index, value) => this.setState({value});

  renderTitle(){
    if(this.state.search){
      return <SearchBar />
    } else {
      return "SISO Líder"
    }
  }
  render() {
    if(!this.props.authenticated){
      return <span></span>
    }
    return (
      <div>
        <Drawer
          docked={false}
          width={200}
          open={this.state.open}
          onRequestChange={(open) => this.setState({open})}
        >
        <MenuItem onTouchTap={this.handleClose} leftIcon={<Home />}  >Início</MenuItem>
        <Divider />
        <ListItem primaryText="Empresas"
          nestedItems={this.renderEmpresas()}
           />
        <Divider />

        <MenuItem onTouchTap={this.handleClose} leftIcon={<Settings  />}>Configurações</MenuItem>
        <MenuItem onTouchTap={this.handleClose} leftIcon={<Exit />}>Sair</MenuItem>
        </Drawer>
      <AppBar
          title={this.renderTitle()}
          iconElementLeft={<IconButton
            onTouchTap={(open) => this.setState({open: true})}
            ><NavigationExpand /></IconButton>}
          iconElementRight={
            <IconButton onTouchTap={this.handleSearch}><SearchIcon /></IconButton>
        }
        />
      </div>
    )
  }
}
function mapStateToProps(state) {
  return { authenticated: state.auth.authenticated, empresas: state.empresas}
}
function mapDispathToProps(dispatch) {
  return bindActionCreators({fetchEmpresas}, dispatch);
}

export default connect(mapStateToProps,mapDispathToProps)(Header);
